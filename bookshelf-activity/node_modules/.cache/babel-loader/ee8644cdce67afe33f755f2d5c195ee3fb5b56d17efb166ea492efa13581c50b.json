{"ast":null,"code":"const API_BASE = process.env.REACT_APP_API || 'http://localhost:4000';\nexport async function fetchBooks() {\n  const res = await fetch(`${API_BASE}/books`);\n  if (!res.ok) throw new Error(`Failed to fetch books: ${res.status}`);\n  return res.json();\n}\nexport async function createBook(payload) {\n  const res = await fetch(`${API_BASE}/books`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!res.ok) throw new Error(`Failed to create book: ${res.status}`);\n  return res.json();\n}\nexport async function updateBook(id, payload) {\n  const res = await fetch(`${API_BASE}/books/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!res.ok) throw new Error(`Failed to update book: ${res.status}`);\n  return res.json();\n}\nexport async function deleteBook(id) {\n  const res = await fetch(`${API_BASE}/books/${id}`, {\n    method: 'DELETE'\n  });\n  if (!res.ok && res.status !== 204) throw new Error(`Failed to delete book: ${res.status}`);\n  return true;\n}","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API","fetchBooks","res","fetch","ok","Error","status","json","createBook","payload","method","headers","body","JSON","stringify","updateBook","id","deleteBook"],"sources":["/Users/family/Documents/Bookshelf/bookshelf-activity/src/api/books.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API || 'http://localhost:4000';\n\nexport async function fetchBooks() {\n  const res = await fetch(`${API_BASE}/books`);\n  if (!res.ok) throw new Error(`Failed to fetch books: ${res.status}`);\n  return res.json();\n}\n\nexport async function createBook(payload) {\n  const res = await fetch(`${API_BASE}/books`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload),\n  });\n  if (!res.ok) throw new Error(`Failed to create book: ${res.status}`);\n  return res.json();\n}\n\nexport async function updateBook(id, payload) {\n  const res = await fetch(`${API_BASE}/books/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload),\n  });\n  if (!res.ok) throw new Error(`Failed to update book: ${res.status}`);\n  return res.json();\n}\n\nexport async function deleteBook(id) {\n  const res = await fetch(`${API_BASE}/books/${id}`, { method: 'DELETE' });\n  if (!res.ok && res.status !== 204) throw new Error(`Failed to delete book: ${res.status}`);\n  return true;\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,IAAI,uBAAuB;AAErE,OAAO,eAAeC,UAAUA,CAAA,EAAG;EACjC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,QAAQ,CAAC;EAC5C,IAAI,CAACK,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0BH,GAAG,CAACI,MAAM,EAAE,CAAC;EACpE,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeC,UAAUA,CAACC,OAAO,EAAE;EACxC,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,QAAQ,EAAE;IAC3Ca,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACP,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0BH,GAAG,CAACI,MAAM,EAAE,CAAC;EACpE,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeQ,UAAUA,CAACC,EAAE,EAAEP,OAAO,EAAE;EAC5C,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,UAAUmB,EAAE,EAAE,EAAE;IACjDN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACP,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0BH,GAAG,CAACI,MAAM,EAAE,CAAC;EACpE,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAeU,UAAUA,CAACD,EAAE,EAAE;EACnC,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,UAAUmB,EAAE,EAAE,EAAE;IAAEN,MAAM,EAAE;EAAS,CAAC,CAAC;EACxE,IAAI,CAACR,GAAG,CAACE,EAAE,IAAIF,GAAG,CAACI,MAAM,KAAK,GAAG,EAAE,MAAM,IAAID,KAAK,CAAC,0BAA0BH,GAAG,CAACI,MAAM,EAAE,CAAC;EAC1F,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}